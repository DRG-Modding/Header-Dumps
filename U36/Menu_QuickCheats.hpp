#ifndef UE4SS_SDK_Menu_QuickCheats_HPP
#define UE4SS_SDK_Menu_QuickCheats_HPP

class UMenu_QuickCheats_C : public UWindowWidget
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UButton* Button_Close;
    class UButton* Button_CompleteMission;
    class UButton* Button_CompleteObjectives;
    class UButton* Button_Driller;
    class UButton* Button_EnemySpawning;
    class UButton* Button_Engineer;
    class UButton* Button_FastMovement;
    class UButton* Button_FlyMode;
    class UButton* Button_GiveNitra;
    class UButton* Button_GodMode;
    class UButton* Button_Gunner;
    class UButton* Button_KillEverything;
    class UButton* Button_MaxLighting;
    class UButton* Button_OpenDifficulty;
    class UButton* Button_QuadPickaxe;
    class UButton* Button_Resupply;
    class UButton* Button_Scout;
    class UButton* Button_SpawnLootBugs;
    class UButton* Button_SpawnWaveFromPool;
    class UButton* Button_SwapPrimary;
    class UButton* Button_SwapSecondary;
    class UButton* Button_ToggleBosco;
    class USlider* HealthSlider;
    class UImage* Image_95;
    class UImage* Image_97;
    class UImage* Image_98;
    class UImage* Image_99;
    class UImage* Image_100;
    class UImage* Image_318;
    class UImage* Image_320;
    class UImage* Image_321;
    class UImage* Image_322;
    class UImage* Image_324;
    class UImage* Image_325;
    class UMenuAnchor* MenuAnchor_53;
    class UMenuAnchor* MenuAnchor_advSpawn;
    class UComboBoxString* PlayerCountBox;
    class UCanvasPanel* TopCanvasPanel;
    class UCheckBox* UsingSavedCheats;
    int32 Current Tab Index;
    int32 Amount of main tabs;
    bool GodmodeActive;
    bool FastMovementActive;
    bool FlyingActive;
    bool QuadPickaxeActive;
    bool MaxLightingActive;
    bool AmmoCostEnabled;
    class UCheat_SpawnEnemyAdvanced_C* Advanced Spawn Menu;
    class UPlayerCharacterID* ActiveCharac;

    class UWidget* On_MenuAnchor_advSpawn_GetMenuContent_0();
    FLinearColor GetColorAndOpacity_NoAmmoCost();
    FLinearColor GetColorAndOpacity_MaxLightningActive();
    FLinearColor GetColorAndOpacity_QuadPickaxe();
    FLinearColor GetColorAndOpacity_Flying();
    FLinearColor GetColorAndOpacity_FastMovement();
    FLinearColor GetColorAndOpacity_Godmode();
    class UUpgradableBoscoComponent* GetBoscoUpgradeComponent(class ABosco*& Drone);
    class UWidget* OnGetMenuContent_0();
    ESlateVisibility Get_ActivateCommonCheatsButton_Visibility_0();
    float Get_HealthSlider_Value_0();
    FEventReply OnKeyDown(FGeometry MyGeometry, FKeyEvent InKeyEvent);
    void BndEvt__Button_Close_K2Node_ComponentBoundEvent_62_OnButtonClickedEvent__DelegateSignature();
    void OnShown();
    void OnClosed();
    void BndEvt__Button_Gunner_K2Node_ComponentBoundEvent_683_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Engineer_K2Node_ComponentBoundEvent_735_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Driller_K2Node_ComponentBoundEvent_758_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Scout_K2Node_ComponentBoundEvent_782_OnButtonClickedEvent__DelegateSignature();
    void Construct();
    void Swap Weapon to next(EItemCategory Item Category);
    void HotKey Interaction change character();
    void BndEvt__HealthSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);
    void BndEvt__Button_Resupply_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_GodMode_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_FastMovement_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_KillEverything_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_FlyMode_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_CompleteMission_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_QuadPickaxe_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_96_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_SwapPrimary_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_SwapSecondary_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature();
    void Set Cheats from setting();
    void BndEvt__Button_OpenDifficulty_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_CompleteObjectives_K2Node_ComponentBoundEvent_13_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_GiveNitra_K2Node_ComponentBoundEvent_14_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_SpawnLootBugs_K2Node_ComponentBoundEvent_15_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_SpawnWaveFromPool_K2Node_ComponentBoundEvent_16_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_ToggleBosco_K2Node_ComponentBoundEvent_17_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__ComboBoxString_138_K2Node_ComponentBoundEvent_18_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, TEnumAsByte<ESelectInfo::Type> SelectionType);
    void Close Advanced spawning();
    void BndEvt__Button_EnemySpawning_K2Node_ComponentBoundEvent_19_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__MenuAnchor_advSpawn_K2Node_ComponentBoundEvent_20_OnMenuOpenChangedEvent__DelegateSignature(bool bIsOpen);
    void BndEvt__UsingSavedCheats_K2Node_ComponentBoundEvent_9_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
    void ExecuteUbergraph_Menu_QuickCheats(int32 EntryPoint);
};

#endif
