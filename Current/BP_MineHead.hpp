#ifndef UE4SS_SDK_BP_MineHead_HPP
#define UE4SS_SDK_BP_MineHead_HPP

class ABP_MineHead_C : public AFSDMiningHead
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UTerrainScannerStaticMesh* MineHead_ TerrainScanner;
    class UPathfinderCollisionComponent* PB_SmallPlatform05;
    class UPathfinderCollisionComponent* PB_SmallPlatform04;
    class UPathfinderCollisionComponent* PB_SmallPlatform03;
    class UPathfinderCollisionComponent* PB_SmallPlatform02;
    class UPathfinderCollisionComponent* PB_SmallPlatform01;
    class UChildActorComponent* OxygenAudio;
    class UChildActorComponent* OxygenTank05;
    class UChildActorComponent* OxygenTank04;
    class UChildActorComponent* OxygenTank03;
    class UChildActorComponent* OxygenTank02;
    class UChildActorComponent* OxygenTank01;
    class UCapsuleComponent* Capsule;
    class UTerrainPlacementComponent* terrainPlacement;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp2_Blocker;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp3_Blocker;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp4_Blocker;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp5_Blocker;
    class UPathfinderCollisionComponent* ButtonPlatform_Blocker;
    class UPathfinderCollisionComponent* MainPlatform_Blocker;
    class UPathfinderCollisionComponent* AIBlockBelow3;
    class UPathfinderCollisionComponent* AIBlockBelow2;
    class UPathfinderCollisionComponent* AIBlockBelow1;
    class UOxygenSourceComponent* OxygenSource;
    class USphereComponent* HeatSource;
    class UAudioComponent* AudioDepositing;
    class UWidgetComponent* ButtonActive_Widget;
    class UParticleSystemComponent* P_Minehead_LaunchDust;
    class UChildActorComponent* Sentry3;
    class UChildActorComponent* Sentry2;
    class UChildActorComponent* Sentry1;
    class UAudioComponent* GrinderAudio;
    class UPathfinderCollisionComponent* AIBlockBelow;
    class USpotLightComponent* SpotLight_Rocket;
    class USphereComponent* KillSphere;
    class UBoxComponent* OpenDepositerBox;
    class UCapsuleComponent* ResourceBankUsableCapsule_01;
    class USingleUsableComponent* Usable_LaunchRocket;
    class USphereComponent* LaunchRocketSphere;
    class UPathfinderCollisionComponent* PathfinderCollision_Rocket;
    class UPathfinderCollisionComponent* PathfinderCollision_Drill;
    class UPathfinderCollisionComponent* PFSmallPlatform05;
    class UPathfinderCollisionComponent* PFSmallPlatform04;
    class UPathfinderCollisionComponent* PFSmallPlatform03;
    class UPathfinderCollisionComponent* PFSmallPlatform02;
    class UPathfinderCollisionComponent* PFSmallPlatform01;
    class UPathfinderCollisionComponent* MainPlatform;
    class UPathfinderCollisionComponent* ButtonPlatform_01;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp2;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp3;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp4;
    class UOutlineComponent* outline;
    class USimpleObjectInfoComponent* SimpleObjectInfo;
    class UActorTrackingComponent* ActorTracking;
    class UStaticMeshComponent* StaticMesh2;
    class USpotLightComponent* SpotLight1;
    class UStaticMeshComponent* StaticMesh3;
    class UChildActorComponent* Lights_02;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp5;
    class UStaticMeshComponent* StaticMesh1;
    class USpotLightComponent* SpotLight;
    class UStaticMeshComponent* Light;
    class UChildActorComponent* Lights_01;
    class UPointLightComponent* PointLight;
    class USkeletalMeshComponent* Drill;
    class USkeletalMeshComponent* MineHead;
    class UAudioComponent* DrillingSoundInstance;
    bool IsLiftingOff;
    bool CanLaunch;
    int32 PlayersInDepositRange;
    class UMaterialInstanceDynamic* BlinkingLightsMaterial_Button;
    class UMaterialInstanceDynamic* BlinkingLightsMaterial_Pole;
    float BlinkingLightsEmmissive_Button;
    float BlinkingLightsEmmissive_Pole;
    TArray<class APlayerCharacter*> DeadPlayers;
    FBP_MineHead_CMinheadStateChanged MinheadStateChanged;
    void MinheadStateChanged(TEnumAsByte<Minehead_State::Type> State);
    TEnumAsByte<Minehead_State::Type> MineheadState;
    class UParticleSystemComponent* DrillParticles01;
    class UParticleSystemComponent* DrillParticles02;
    class ABP_Minehead_LandingZone_C* LandingZoneMarker;
    class UAudioComponent* ButtonLaunchSoundInstance;

    void ConditionallyEnableShadows();
    void OnRep_MineheadState();
    void SetState(TEnumAsByte<Minehead_State::Type> MineheadState);
    void HandleDeadPlayers();
    void OnRep_CanLaunch();
    void OnRep_IsLiftingOff();
    void UserConstructionScript();
    void OnDrillingStarted();
    void OnDroppodImpact();
    void ReceiveBeginPlay();
    void OnLiftoff();
    void objectivesCompleted();
    void BndEvt__Usable_LaunchRocket_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
    void BndEvt__OpenDepositerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);
    void BndEvt__OpenDepositerBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
    void BndEvt__KillSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);
    void BndEvt__ResourceBank_K2Node_ComponentBoundEvent_0_ResourceBankEvent__DelegateSignature(class APlayerCharacter* User);
    void BndEvt__ResourceBank_K2Node_ComponentBoundEvent_1_ResourceBankEvent__DelegateSignature(class APlayerCharacter* User);
    void BndEvt__HeatSource_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);
    void BndEvt__HeatSource_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
    void UpdateShadows();
    void BndEvt__Usable_LaunchRocket_K2Node_ComponentBoundEvent_3_UsableChangedSignature__DelegateSignature(bool CanUse);
    void ExecuteUbergraph_BP_MineHead(int32 EntryPoint);
    void MinheadStateChanged__DelegateSignature(TEnumAsByte<Minehead_State::Type> State);
};

#endif
