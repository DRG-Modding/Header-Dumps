#ifndef UE4SS_SDK_EndScreenSetups_HPP
#define UE4SS_SDK_EndScreenSetups_HPP

class UEndScreenSetups_C : UActorComponent
{
    TArray<FEndScreenMoveSet> VictorySets;
    TArray<FEndScreenMoveSet> DefeatSets;
    TArray<FEndScreenMoveSet> AvailableVictorySets;
    TArray<FEndScreenMoveSet> AvailableDefeatSets;
    FRandomStream RandStream;

    void GetRandomWalkAnim(UVictoryPose* VicPose, FRandomStream& RandStream, SoftObjectProperty& Walk, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue, SoftObjectProperty CallFunc_Array_Get_Item);
    void LoadVictoryAnims(UVictoryPose* InputPin, FRandomStream& RandStream, FEndScreenMove& EndScreenMove, SoftObjectProperty CallFunc_GetRandomWalkAnim_Walk, UAnimSequence* CallFunc_LoadAnimSeq_Hard, TArray<UAnimSequence*>& CallFunc_LoadAnimSeqArray_Hard, UAnimSequence* CallFunc_LoadAnimSeq_Hard_1, UAnimSequence* CallFunc_LoadAnimSeq_Hard_2, UAnimSequence* CallFunc_LoadAnimSeq_Hard_3, UAnimSequence* CallFunc_LoadAnimSeq_Hard_4, TSubclassOf<AActor> CallFunc_LoadActorClass_Hard, UAnimSequence* CallFunc_LoadAnimSeq_Hard_5, FEndScreenMove K2Node_MakeStruct_EndScreenMove);
    void LoadActorClass(SoftClassProperty Soft, TSubclassOf<AActor>& Hard, TSubclassOf<UObject> CallFunc_LoadClass_ReturnValue, bool CallFunc_IsValidSoftClassReference_ReturnValue, TSubclassOf<AActor> K2Node_ClassDynamicCast_AsActor, bool K2Node_ClassDynamicCast_bSuccess);
    void LoadAnimSeqArray(TArray<SoftObjectProperty>& Soft, TArray<UAnimSequence*>& Hard, UAnimSequence* element, TArray<UAnimSequence*> Result, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, SoftObjectProperty CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, UAnimSequence* CallFunc_LoadAnimSeq_Hard, int32 CallFunc_Array_Add_ReturnValue, TArray<UAnimSequence*>& K2Node_MakeArray_Array);
    void LoadAnimSeq(SoftObjectProperty Soft, UAnimSequence*& Hard, UObject* CallFunc_LoadAsset_Blocking_ReturnValue, bool CallFunc_IsValidSoftObjectReference_ReturnValue, UAnimSequence* K2Node_DynamicCast_AsAnim_Sequence, bool K2Node_DynamicCast_bSuccess);
    void SplitMoveSetAnims(const TArray<SoftObjectProperty>& TargetArray, UAnimSequence*& Selected1, TArray<SoftObjectProperty>& Rest1, int32 SelectedIdx, TArray<SoftObjectProperty> Rest, UAnimSequence* Selected, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue, SoftObjectProperty CallFunc_Array_Get_Item, UAnimSequence* CallFunc_LoadAnimSeq_Hard, int32 CallFunc_Array_Add_ReturnValue);
    void ResetMovesets(int32 NewSeed);
    void RandomWeightedMoveSet(TArray<FEndScreenMoveSet>& Array, FEndScreenMove& Selected, int32 SelectedSoFar, float TotalWeight, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, FEndScreenMoveSet CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_RandomFloatFromStream_ReturnValue, FEndScreenMoveSet CallFunc_Array_Get_Item_1, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, UAnimSequence* CallFunc_LoadAnimSeq_Hard, UAnimSequence* CallFunc_LoadAnimSeq_Hard_1, UAnimSequence* CallFunc_LoadAnimSeq_Hard_2, TSubclassOf<AActor> CallFunc_LoadActorClass_Hard, TArray<UAnimSequence*>& CallFunc_LoadAnimSeqArray_Hard, UAnimSequence* CallFunc_LoadAnimSeq_Hard_3, UAnimSequence* CallFunc_SplitMoveSetAnims_Selected1, TArray<SoftObjectProperty>& CallFunc_SplitMoveSetAnims_Rest1, UAnimSequence* CallFunc_SplitMoveSetAnims_Selected1_1, TArray<SoftObjectProperty>& CallFunc_SplitMoveSetAnims_Rest1_1, FString CallFunc_GetDisplayName_ReturnValue, FEndScreenMoveSet K2Node_MakeStruct_EndScreenMoveSet, FString CallFunc_Concat_StrStr_ReturnValue, FEndScreenMove K2Node_MakeStruct_EndScreenMove, float CallFunc_Add_FloatFloat_ReturnValue);
    void GetEndScreenMoveSet(bool Survived, UVictoryPose* VictPose, FRandomStream& RandStream, FEndScreenMove& Selected, FEndScreenMove CallFunc_LoadVictoryAnims_EndScreenMove, FEndScreenMove CallFunc_RandomWeightedMoveSet_Selected, bool CallFunc_IsValid_ReturnValue, FEndScreenMove CallFunc_RandomWeightedMoveSet_Selected_1);
    void RandomAnimElement(TArray<UAnimSequence*>& Array, UAnimSequence*& Output, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_RandomIntegerInRangeFromStream_ReturnValue, UAnimSequence* CallFunc_Array_Get_Item);
}

#endif
