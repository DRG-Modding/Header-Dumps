#ifndef UE4SS_SDK_BP_Refinery_HPP
#define UE4SS_SDK_BP_Refinery_HPP

class ABP_Refinery_C : UFSDRefinery
{
    FPointerToUberGraphFrame UberGraphFrame;
    UPathfinderCollisionComponent* PB_ButtonConsole;
    UPathfinderCollisionComponent* PB_UnderMainPlatform2;
    USkeletalMeshComponent* Refinery;
    USceneComponent* RespawnPoint;
    UCapsuleComponent* Capsule;
    USpotLightComponent* SpotLight;
    USphereComponent* HeatSource;
    UOutlineComponent* outline;
    UChildActorComponent* BP_Refinery_RocketLamp06;
    UChildActorComponent* BP_Refinery_RocketLamp08;
    UChildActorComponent* BP_Refinery_RocketLamp07;
    UChildActorComponent* BP_Refinery_RocketLamp05;
    UChildActorComponent* BP_Refinery_RocketLamp02;
    UChildActorComponent* BP_Refinery_RocketLamp04;
    UChildActorComponent* BP_Refinery_RocketLamp03;
    UChildActorComponent* BP_Refinery_RocketLamp01;
    UChildActorComponent* BP_Refinery_Lamp04;
    UPointLightComponent* PointLight4;
    UChildActorComponent* BP_Refinery_Lamp03;
    UChildActorComponent* BP_Refinery_Lamp02;
    UChildActorComponent* BP_Refinery_Lamp01;
    UChildActorComponent* OxygenTank01;
    UChildActorComponent* OxygenTank03;
    UChildActorComponent* OxygenAudio;
    UChildActorComponent* OxygenTank02;
    UOxygenSourceComponent* OxygenSource;
    USphereComponent* KillSphere;
    UWidgetComponent* UseButtonWidget;
    UWidgetComponent* UseButtonMonitor;
    UStaticMeshComponent* UseButton;
    UChildActorComponent* BP_Refinery_ProjectorLight3;
    UChildActorComponent* BP_Refinery_ProjectorLight2;
    UChildActorComponent* BP_Refinery_ProjectorLight1;
    UAudioComponent* AudioDropStarted;
    USceneComponent* AudioRoot;
    UChildActorComponent* BP_Depositor_02;
    UChildActorComponent* BP_Depositor_01;
    USceneComponent* Active Refining Particles;
    UPathfinderCollisionComponent* PB_BottomPlatform;
    UPathfinderCollisionComponent* PB_Ramp03;
    UPathfinderCollisionComponent* PB_Ramp02;
    UPathfinderCollisionComponent* PB_Ramp01;
    UPathfinderCollisionComponent* PB_UnderMainPlatform;
    UPathfinderCollisionComponent* PB_Rocket;
    UPathfinderCollisionComponent* PC_BottomPlatform;
    UPathfinderCollisionComponent* PC_Ramp03;
    UPathfinderCollisionComponent* PC_Ramp02;
    UPathfinderCollisionComponent* PC_Ramp01;
    UPathfinderCollisionComponent* PC_MainPlatform;
    USceneComponent* PathfinderBlockers;
    UChildActorComponent* BP_Refinery_WarningLight3;
    UChildActorComponent* BP_Refinery_WarningLight2;
    UChildActorComponent* BP_Refinery_WarningLight1;
    UChildActorComponent* ProgressBar03;
    UChildActorComponent* ProgressBar02;
    UChildActorComponent* ProgressBar01;
    UTerrainScannerStaticMesh* TerrainScannerStaticMesh;
    UTerrainPlacementComponent* TerrainPlacement1;
    USphereComponent* UseButtonCollider;
    UMeshCarverComponent* MeshCarver;
    UChildActorComponent* PipeStart03;
    UChildActorComponent* PipeStart02;
    UChildActorComponent* PipeStart01;
    USpawnActorWithDebrisPosComponent* SpawnTarget;
    UPointLightComponent* PointLight3;
    UPointLightComponent* PointLight2;
    UPointLightComponent* PointLight1;
    UPointLightComponent* PointLight;
    USimpleObjectInfoComponent* SimpleObjectInfo;
    UActorTrackingComponent* ActorTracking;
    UTerrainPlacementComponent* terrainPlacement;
    USkeletalMeshComponent* Drill;
    UEnemyWaveController* ActiveRefiningWave;
    TArray<APipelineStart*> CompletedPipelines;
    UEnemyWaveController* ActiveRefiningWaveConstant;
    ABP_Refinery_LandingZone_C* LandinZoneInstance;
    UAudioComponent* DrillingSoundInstance;
    UParticleSystemComponent* DrillParticles01;
    UParticleSystemComponent* DrillParticles02;
    TArray<APlayerCharacter*> DeadPlayers;

    bool IsDeepDive(UFSDGameInstance* CallFunc_GetFSDGameInstance_ReturnValue, UGeneratedMission* CallFunc_GetGeneratedMission_ReturnValue, bool CallFunc_IsDeepDive_ReturnValue, bool CallFunc_IsValid_ReturnValue);
    void Spawn Landing Zone(FRotator CallFunc_K2_GetActorRotation_ReturnValue, FTransform CallFunc_MakeTransform_ReturnValue, AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, ABP_Refinery_LandingZone_C* CallFunc_FinishSpawningActor_ReturnValue);
    void CheckPipelineMissionShout(APipelineStart* InPipelineStart, EPipelineBuildState InPipelineState, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, bool K2Node_SwitchInteger_CmpSuccess, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess);
    void ActivatePathfinderBlockers(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<USceneComponent*>& CallFunc_GetChildrenComponents_Children, int32 CallFunc_Array_Length_ReturnValue, USceneComponent* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, UPathfinderCollisionComponent* K2Node_DynamicCast_AsPathfinder_Collision_Component, bool K2Node_DynamicCast_bSuccess);
    void UserConstructionScript();
    void OnDroppodImpact();
    void ReceiveRefineryStateChanged(ERefineryState InState);
    void EnemiesOnStateChanged();
    void ReceiveBeginPlay();
    void Mission Shouts on State Changed();
    void ReceivePipelineStateChanged(APipelineStart* InPipeline, EPipelineBuildState InState);
    void BndEvt__UsableStartRefining_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature(UPlayerCharacter* User, EInputKeys Key);
    void OnDrillingStarted();
    void AudioOnStateChanged();
    void OnDropStartedGFX();
    void OnDropImpactGFX();
    void SetupUseButtonUI();
    void BndEvt__KillSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);
    void BndEvt__HeatSource_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);
    void BndEvt__HeatSource_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
    void CameraShakeOnStateChange();
    void OnObjectivesCompleted_Event_0();
    void BndEvt__UsableStartRefining_K2Node_ComponentBoundEvent_2_UsableChangedSignature__DelegateSignature(bool CanUse);
    void BndEvt__UsableLaunchRocket_K2Node_ComponentBoundEvent_3_UsableChangedSignature__DelegateSignature(bool CanUse);
    void UpdateUseIcon();
    void ExecuteUbergraph_BP_Refinery(int32 EntryPoint, int32 Temp_int_Array_Index_Variable, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_IsClosed_Variable, bool CallFunc_HasAuthority_ReturnValue_1, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_IsValid_ReturnValue_1, ERefineryState K2Node_Event_InState_1, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, APipelineStart* K2Node_Event_InPipeline, EPipelineBuildState K2Node_Event_InState, UPlayerCharacter* K2Node_ComponentBoundEvent_user, EInputKeys K2Node_ComponentBoundEvent_key, bool Temp_bool_Has_Been_Initd_Variable_1, UFSDGameMode* CallFunc_GetFSDGameMode_ReturnValue, UEnemyWaveManager* CallFunc_GetWaveManager_ReturnValue, UEWC_PumpSequence_Wave_Refinery_C* CallFunc_TriggerWave_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_2, FVector CallFunc_K2_GetComponentLocation_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue, bool Temp_bool_IsClosed_Variable_1, UHUD_RefineryUseButton_C* K2Node_DynamicCast_AsHUD_Refinery_Use_Button, bool K2Node_DynamicCast_bSuccess, FVector CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, FVector CallFunc_Add_VectorVector_ReturnValue, UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_1, UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool CallFunc_HasAuthority_ReturnValue_2, UFSDGameState* CallFunc_GetFSDGameState_ReturnValue, FVector CallFunc_K2_GetActorLocation_ReturnValue_1, FVector CallFunc_Add_VectorVector_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, FTransform CallFunc_MakeTransform_ReturnValue, FVector CallFunc_K2_GetComponentLocation_ReturnValue_1, FVector CallFunc_Add_VectorVector_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_4, UAudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue, UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_2, AActor* K2Node_ComponentBoundEvent_OtherActor_2, UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_2, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_2, bool K2Node_ComponentBoundEvent_bFromSweep_1, const FHitResult K2Node_ComponentBoundEvent_SweepResult_1, bool CallFunc_HasAuthority_ReturnValue_3, UHealthComponentBase* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, AActor* CallFunc_GetOwner_ReturnValue, UPlayerCharacter* K2Node_DynamicCast_AsPlayer_Character, bool K2Node_DynamicCast_bSuccess_1, int32 CallFunc_Array_AddUnique_ReturnValue, AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_4, UDialogDataAsset* Temp_object_Variable, UDialogDataAsset* Temp_object_Variable_1, TArray<USceneComponent*>& CallFunc_GetChildrenComponents_Children, USceneComponent* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, UPathfinderCollisionComponent* K2Node_DynamicCast_AsPathfinder_Collision_Component, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_Less_IntInt_ReturnValue, bool Temp_bool_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_5, UFSDGameMode* CallFunc_GetFSDGameMode_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, UEnemyWaveManager* CallFunc_GetWaveManager_ReturnValue_1, UEWC_PumpSequence_ConstantPresure_Refinery_C* CallFunc_TriggerWave_ReturnValue_1, FRotator CallFunc_K2_GetActorRotation_ReturnValue, UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_1, AActor* K2Node_ComponentBoundEvent_OtherActor_1, UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_1, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_1, bool K2Node_ComponentBoundEvent_bFromSweep, const FHitResult K2Node_ComponentBoundEvent_SweepResult, UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, AActor* K2Node_ComponentBoundEvent_OtherActor, UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool CallFunc_TryPopActiveStatusEffect_ReturnValue, bool CallFunc_TryPushActiveStatusEffect_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_3, FVector CallFunc_GetSocketLocation_ReturnValue, FVector CallFunc_K2_GetComponentLocation_ReturnValue_2, UFSDGameMode* CallFunc_GetFSDGameMode_ReturnValue_2, FHitResult CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, UEnemyWaveManager* CallFunc_GetWaveManager_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue_6, UFSDGameMode* CallFunc_GetFSDGameMode_ReturnValue_3, bool CallFunc_IsDeepDive_ReturnValue, bool K2Node_ComponentBoundEvent_canUse_1, bool K2Node_ComponentBoundEvent_canUse, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_7, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_IsDeepDive_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_IsDeepDive_ReturnValue_2, DelegateEvent__DelegateSignature K2Node_CreateDelegate_OutputDelegate, UDialogDataAsset* K2Node_Select_Default, UFSDGameMode* CallFunc_GetFSDGameMode_ReturnValue_4, UEnemyWaveManager* CallFunc_GetWaveManager_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_7);
}

#endif
