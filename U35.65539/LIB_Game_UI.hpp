#ifndef UE4SS_SDK_LIB_Game_UI_HPP
#define UE4SS_SDK_LIB_Game_UI_HPP

class ULIB_Game_UI_C : UBlueprintFunctionLibrary
{

    void GetRewardText(UReward* Reward, UObject* __WorldContext, FText& Title, FText& Category, FText& Description, bool& HasOptionalCharacterID, UPlayerCharacterID*& characterID, FText Temp_text_Variable, bool Temp_bool_Variable, ESchematicType Temp_byte_Variable, FText Temp_text_Variable_1, FText Temp_text_Variable_2, FText Temp_text_Variable_3, FText Temp_text_Variable_4, EItemSkinType Temp_byte_Variable_1, FText Temp_text_Variable_5, FText Temp_text_Variable_6, FText Temp_text_Variable_7, EItemSkinType Temp_byte_Variable_2, FString CallFunc_MakeLiteralString_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue, UVanityCollectionReward* K2Node_DynamicCast_AsVanity_Collection_Reward, bool K2Node_DynamicCast_bSuccess, FFormatArgumentData K2Node_MakeStruct_FormatArgumentData, int32 CallFunc_Array_Length_ReturnValue, USchematicReward* K2Node_DynamicCast_AsSchematic_Reward, bool K2Node_DynamicCast_bSuccess_1, UVictoryPoseReward* K2Node_DynamicCast_AsVictory_Pose_Reward, bool K2Node_DynamicCast_bSuccess_2, FText K2Node_Select_Default, USkinUnlock* K2Node_DynamicCast_AsSkin_Unlock, bool K2Node_DynamicCast_bSuccess_3, UPlayerCharacterID* CallFunc_GetOwningCharacter_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, AActor* CallFunc_GetActor_ReturnValue, AItem* K2Node_DynamicCast_AsItem, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_IsValidSoftClassReference_ReturnValue, FText CallFunc_GetItemName_ReturnValue, FFormatArgumentData K2Node_MakeStruct_FormatArgumentData_1, UPickaxeSetReward* K2Node_DynamicCast_AsPickaxe_Set_Reward, bool K2Node_DynamicCast_bSuccess_5, FText K2Node_Select_Default_1, FString CallFunc_GetObjectName_ReturnValue, FText CallFunc_Conv_StringToText_ReturnValue_1, FText K2Node_Select_Default_2, FText K2Node_Select_Default_3, FFormatArgumentData K2Node_MakeStruct_FormatArgumentData_2, UPickaxePartReward* K2Node_DynamicCast_AsPickaxe_Part_Reward, bool K2Node_DynamicCast_bSuccess_6, TArray<FFormatArgumentData>& K2Node_MakeArray_Array, FText CallFunc_Format_ReturnValue, EPickaxePartLocation CallFunc_GetPrefferedLocation_ReturnValue, FText CallFunc_GetPickaxePartLocationTitle_OutTitle, UResourceReward* K2Node_DynamicCast_AsResource_Reward, bool K2Node_DynamicCast_bSuccess_7, USeasonTokenReward* K2Node_DynamicCast_AsSeason_Token_Reward, bool K2Node_DynamicCast_bSuccess_8, FFormatArgumentData K2Node_MakeStruct_FormatArgumentData_3, FFormatArgumentData K2Node_MakeStruct_FormatArgumentData_4, TArray<FFormatArgumentData>& K2Node_MakeArray_Array_1, FText CallFunc_Format_ReturnValue_1, FFormatArgumentData K2Node_MakeStruct_FormatArgumentData_5, TArray<FFormatArgumentData>& K2Node_MakeArray_Array_2, FText CallFunc_Format_ReturnValue_2, UVanityReward* K2Node_DynamicCast_AsVanity_Reward, bool K2Node_DynamicCast_bSuccess_9, FText Temp_text_Variable_8, const FText CallFunc_GetCraftableDescription_ReturnValue, const FText CallFunc_GetCraftableName_ReturnValue, EVanitySlot CallFunc_GetVanitySlot_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, UVanityItem* CallFunc_Array_Get_Item, EVanitySlot CallFunc_GetVanitySlot_ReturnValue_1, const FText CallFunc_GetCraftableDescription_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, FText CallFunc_GetVanitySlotTitle_OutTitle, const FText CallFunc_GetCraftableName_ReturnValue_1, FText CallFunc_GetVanitySlotTitle_OutTitle_1, bool Temp_bool_Variable_1, FText Temp_text_Variable_9, FText K2Node_Select_Default_4, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable_2, FText K2Node_Select_Default_5);
    void GetEnemyFamilyName(EEnemyFamily Family, UObject* __WorldContext, FText& Name, EEnemyFamily Temp_byte_Variable, FText Temp_text_Variable, FText Temp_text_Variable_1, FText Temp_text_Variable_2, FText Temp_text_Variable_3, FText Temp_text_Variable_4, FText Temp_text_Variable_5, FText Temp_text_Variable_6, FText Temp_text_Variable_7, FText Temp_text_Variable_8, FText Temp_text_Variable_9, FText Temp_text_Variable_10, FText K2Node_Select_Default);
    void GetArmorTypeInfo(EArmorType Type, UObject* __WorldContext, FText& Display Text, UTexture2D*& Icon, FLinearColor& Color, bool K2Node_SwitchEnum_CmpSuccess);
    void GetEnemyTypeInfo(EEnemyType Type, UObject* __WorldContext, FText& Display Text, UTexture2D*& Icon, FLinearColor& IconColor, bool K2Node_SwitchEnum_CmpSuccess);
    void GetEnemyFamilyInfo(EEnemyFamily Family, UObject* __WorldContext, FText& Name, UTexture2D*& Icon, FLinearColor& Color, SoftObjectProperty softtex, EEnemyFamily Temp_byte_Variable, FText CallFunc_GetEnemyFamilyName_Name, SoftObjectProperty Temp_softobject_Variable, SoftObjectProperty Temp_softobject_Variable_1, SoftObjectProperty Temp_softobject_Variable_2, SoftObjectProperty Temp_softobject_Variable_3, SoftObjectProperty Temp_softobject_Variable_4, SoftObjectProperty Temp_softobject_Variable_5, SoftObjectProperty Temp_softobject_Variable_6, SoftObjectProperty Temp_softobject_Variable_7, SoftObjectProperty Temp_softobject_Variable_8, SoftObjectProperty Temp_softobject_Variable_9, SoftObjectProperty Temp_softobject_Variable_10, EEnemyFamily Temp_byte_Variable_1, FLinearColor Temp_struct_Variable, FLinearColor Temp_struct_Variable_1, FLinearColor Temp_struct_Variable_2, FLinearColor Temp_struct_Variable_3, FLinearColor Temp_struct_Variable_4, FLinearColor Temp_struct_Variable_5, FLinearColor Temp_struct_Variable_6, FLinearColor Temp_struct_Variable_7, FLinearColor Temp_struct_Variable_8, FLinearColor Temp_struct_Variable_9, FLinearColor Temp_struct_Variable_10, SoftObjectProperty K2Node_Select_Default, FLinearColor K2Node_Select_Default_1, UObject* CallFunc_LoadAsset_Blocking_ReturnValue, UTexture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess);
    void GetPickaxePartLocationTitle(EPickaxePartLocation InPartLocation, bool UpperCase, bool LongName, UObject* __WorldContext, FText& OutTitle, FText Paintjob, FText Pommel, FText Handle, FText Shaft, FText BackBlade, FText FrontBlade, FText Head, FText Title, EPickaxePartLocation Temp_byte_Variable, FText Temp_text_Variable, FText Temp_text_Variable_1, FText Temp_text_Variable_2, FText Temp_text_Variable_3, FText Temp_text_Variable_4, FText Temp_text_Variable_5, FText Temp_text_Variable_6, bool Temp_bool_Variable, EPickaxePartLocation Temp_byte_Variable_1, bool Temp_bool_Variable_1, FText K2Node_Select_Default, FText CallFunc_TextToUpper_ReturnValue, FText K2Node_Select_Default_1, FText K2Node_Select_Default_2, FText K2Node_Select_Default_3);
    void GetVanitySlotTitle(EVanitySlot InVanitySlot, bool UpperCase, UObject* __WorldContext, FText& OutTitle, FText Title, bool Temp_bool_Variable, EVanitySlot Temp_byte_Variable, FText CallFunc_MakeLiteralText_ReturnValue, FText CallFunc_TextToUpper_ReturnValue, FText K2Node_Select_Default, FText CallFunc_MakeLiteralText_ReturnValue_1, FText CallFunc_MakeLiteralText_ReturnValue_2, FText CallFunc_MakeLiteralText_ReturnValue_3, FText CallFunc_MakeLiteralText_ReturnValue_4, FText CallFunc_MakeLiteralText_ReturnValue_5, FText CallFunc_MakeLiteralText_ReturnValue_6, FText CallFunc_MakeLiteralText_ReturnValue_7, FText CallFunc_MakeLiteralText_ReturnValue_8, const FText K2Node_Select_Default_1);
    void GetVanitySlotIcon(EVanitySlot VanitySlot, UObject* __WorldContext, UTexture2D*& AsTexture 2D, EVanitySlot Temp_byte_Variable, SoftObjectProperty Temp_softobject_Variable, SoftObjectProperty Temp_softobject_Variable_1, SoftObjectProperty Temp_softobject_Variable_2, SoftObjectProperty Temp_softobject_Variable_3, SoftObjectProperty Temp_softobject_Variable_4, SoftObjectProperty Temp_softobject_Variable_5, SoftObjectProperty Temp_softobject_Variable_6, SoftObjectProperty Temp_softobject_Variable_7, SoftObjectProperty Temp_softobject_Variable_8, SoftObjectProperty K2Node_Select_Default, UObject* CallFunc_LoadAsset_Blocking_ReturnValue, UTexture2D* K2Node_DynamicCast_AsTexture_2D, bool K2Node_DynamicCast_bSuccess);
}

#endif
