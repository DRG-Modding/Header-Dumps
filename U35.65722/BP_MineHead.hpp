#ifndef UE4SS_SDK_BP_MineHead_HPP
#define UE4SS_SDK_BP_MineHead_HPP

class ABP_MineHead_C : public AFSDMiningHead
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UTerrainScannerStaticMesh* MineHead_ TerrainScanner;
    class UPathfinderCollisionComponent* PB_SmallPlatform05;
    class UPathfinderCollisionComponent* PB_SmallPlatform04;
    class UPathfinderCollisionComponent* PB_SmallPlatform03;
    class UPathfinderCollisionComponent* PB_SmallPlatform02;
    class UPathfinderCollisionComponent* PB_SmallPlatform01;
    class UChildActorComponent* OxygenAudio;
    class UChildActorComponent* OxygenTank05;
    class UChildActorComponent* OxygenTank04;
    class UChildActorComponent* OxygenTank03;
    class UChildActorComponent* OxygenTank02;
    class UChildActorComponent* OxygenTank01;
    class UCapsuleComponent* Capsule;
    class UTerrainPlacementComponent* terrainPlacement;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp2_Blocker;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp3_Blocker;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp4_Blocker;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp5_Blocker;
    class UPathfinderCollisionComponent* ButtonPlatform_Blocker;
    class UPathfinderCollisionComponent* MainPlatform_Blocker;
    class UPathfinderCollisionComponent* AIBlockBelow3;
    class UPathfinderCollisionComponent* AIBlockBelow2;
    class UPathfinderCollisionComponent* AIBlockBelow1;
    class UOxygenSourceComponent* OxygenSource;
    class USphereComponent* HeatSource;
    class UAudioComponent* AudioDepositing;
    class UWidgetComponent* ButtonActive_Widget;
    class UParticleSystemComponent* P_Minehead_LaunchDust;
    class UChildActorComponent* Sentry3;
    class UChildActorComponent* Sentry2;
    class UChildActorComponent* Sentry1;
    class UAudioComponent* GrinderAudio;
    class UPathfinderCollisionComponent* AIBlockBelow;
    class USpotLightComponent* SpotLight_Rocket;
    class USphereComponent* KillSphere;
    class UBoxComponent* OpenDepositerBox;
    class UCapsuleComponent* ResourceBankUsableCapsule_01;
    class USingleUsableComponent* Usable_LaunchRocket;
    class USphereComponent* LaunchRocketSphere;
    class UPathfinderCollisionComponent* PathfinderCollision_Rocket;
    class UPathfinderCollisionComponent* PathfinderCollision_Drill;
    class UPathfinderCollisionComponent* PFSmallPlatform05;
    class UPathfinderCollisionComponent* PFSmallPlatform04;
    class UPathfinderCollisionComponent* PFSmallPlatform03;
    class UPathfinderCollisionComponent* PFSmallPlatform02;
    class UPathfinderCollisionComponent* PFSmallPlatform01;
    class UPathfinderCollisionComponent* MainPlatform;
    class UPathfinderCollisionComponent* ButtonPlatform_01;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp2;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp3;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp4;
    class UOutlineComponent* outline;
    class USimpleObjectInfoComponent* SimpleObjectInfo;
    class UActorTrackingComponent* ActorTracking;
    class UStaticMeshComponent* StaticMesh2;
    class USpotLightComponent* SpotLight1;
    class UStaticMeshComponent* StaticMesh3;
    class UChildActorComponent* Lights_02;
    class UPathfinderCollisionComponent* PathfinderCollision_Ramp5;
    class UStaticMeshComponent* StaticMesh1;
    class USpotLightComponent* SpotLight;
    class UStaticMeshComponent* Light;
    class UChildActorComponent* Lights_01;
    class UPointLightComponent* PointLight;
    class USkeletalMeshComponent* Drill;
    class USkeletalMeshComponent* MineHead;
    class UAudioComponent* DrillingSoundInstance;
    bool IsLiftingOff;
    bool CanLaunch;
    int32 PlayersInDepositRange;
    class UMaterialInstanceDynamic* BlinkingLightsMaterial_Button;
    class UMaterialInstanceDynamic* BlinkingLightsMaterial_Pole;
    float BlinkingLightsEmmissive_Button;
    float BlinkingLightsEmmissive_Pole;
    TArray<class APlayerCharacter*> DeadPlayers;
    FBP_MineHead_CMinheadStateChanged MinheadStateChanged;
    void MinheadStateChanged(TEnumAsByte<Minehead_State::Type> State);
    TEnumAsByte<Minehead_State::Type> MineheadState;
    class UParticleSystemComponent* DrillParticles01;
    class UParticleSystemComponent* DrillParticles02;
    class ABP_Minehead_LandingZone_C* LandingZoneMarker;
    class UAudioComponent* ButtonLaunchSoundInstance;

    void ConditionallyEnableShadows(class ADeepCSGWorld* CallFunc_GetCSGWorld_ReturnValue, int32 CallFunc_GetShadowQuality_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
    void OnRep_MineheadState(bool K2Node_SwitchEnum_CmpSuccess);
    void SetState(TEnumAsByte<Minehead_State::Type> MineheadState, bool CallFunc_HasAuthority_ReturnValue);
    void HandleDeadPlayers(int32 Temp_int_Array_Index_Variable, bool CallFunc_HasAuthority_ReturnValue, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, FVector CallFunc_GetSocketLocation_ReturnValue, FHitResult CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue);
    void OnRep_CanLaunch(class UFSDGameUserSettings* CallFunc_GetFSDGameUserSettings_ReturnValue, bool CallFunc_GetPhotosensitiveMode_ReturnValue, FVector CallFunc_K2_GetComponentLocation_ReturnValue, class UAudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue);
    void OnRep_IsLiftingOff();
    void UserConstructionScript(float CallFunc_K2_GetScalarParameterValue_ReturnValue, float CallFunc_K2_GetScalarParameterValue_ReturnValue_1, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_1);
    void OnDrillingStarted();
    void OnDroppodImpact();
    void ReceiveBeginPlay();
    void OnLiftoff();
    void objectivesCompleted();
    void BndEvt__Usable_LaunchRocket_K2Node_ComponentBoundEvent_0_UsedBySignature__DelegateSignature(class APlayerCharacter* User, EInputKeys Key);
    void BndEvt__OpenDepositerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);
    void BndEvt__OpenDepositerBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
    void BndEvt__KillSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);
    void BndEvt__ResourceBank_K2Node_ComponentBoundEvent_0_ResourceBankEvent__DelegateSignature(class APlayerCharacter* User);
    void BndEvt__ResourceBank_K2Node_ComponentBoundEvent_1_ResourceBankEvent__DelegateSignature(class APlayerCharacter* User);
    void BndEvt__HeatSource_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);
    void BndEvt__HeatSource_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
    void UpdateShadows();
    void BndEvt__Usable_LaunchRocket_K2Node_ComponentBoundEvent_3_UsableChangedSignature__DelegateSignature(bool CanUse);
    void ExecuteUbergraph_BP_MineHead(int32 EntryPoint, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue, FVector CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UAudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, FVector CallFunc_K2_GetActorLocation_ReturnValue_1, class APlayerCharacter* K2Node_ComponentBoundEvent_user_2, EInputKeys K2Node_ComponentBoundEvent_key, class AGameModeBase* CallFunc_GetGameMode_ReturnValue, class AGM_Motherlode_C* K2Node_DynamicCast_AsGM_Motherlode, bool K2Node_DynamicCast_bSuccess, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_4, class AActor* K2Node_ComponentBoundEvent_OtherActor_4, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_4, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_4, bool K2Node_ComponentBoundEvent_bFromSweep_2, const FHitResult K2Node_ComponentBoundEvent_SweepResult_2, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_3, class AActor* K2Node_ComponentBoundEvent_OtherActor_3, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_3, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_3, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class APlayerCharacter* K2Node_DynamicCast_AsPlayer_Character, bool K2Node_DynamicCast_bSuccess_1, class APlayerCharacter* K2Node_DynamicCast_AsPlayer_Character_1, bool K2Node_DynamicCast_bSuccess_2, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 Temp_int_Variable_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_2, class AActor* K2Node_ComponentBoundEvent_OtherActor_2, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_2, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_2, bool K2Node_ComponentBoundEvent_bFromSweep_1, const FHitResult K2Node_ComponentBoundEvent_SweepResult_1, bool CallFunc_IsValid_ReturnValue_4, class APlayerCharacter* K2Node_DynamicCast_AsPlayer_Character_2, bool K2Node_DynamicCast_bSuccess_3, class UHealthComponentBase* CallFunc_GetComponentByClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, class AFSDGameState* CallFunc_GetFSDGameState_ReturnValue, FVector CallFunc_K2_GetActorLocation_ReturnValue_2, FVector CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, FTransform CallFunc_MakeTransform_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue, FVector CallFunc_K2_GetActorLocation_ReturnValue_3, FVector CallFunc_K2_GetActorLocation_ReturnValue_4, FVector CallFunc_Add_VectorVector_ReturnValue_1, class UAudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue_1, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, FVector CallFunc_K2_GetComponentLocation_ReturnValue, FVector CallFunc_Add_VectorVector_ReturnValue_2, class UAudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue_2, class ABP_Minehead_Sentry_C* K2Node_DynamicCast_AsBP_Minehead_Sentry, bool K2Node_DynamicCast_bSuccess_4, class ABP_Minehead_Sentry_C* K2Node_DynamicCast_AsBP_Minehead_Sentry_1, bool K2Node_DynamicCast_bSuccess_5, class ABP_Minehead_Sentry_C* K2Node_DynamicCast_AsBP_Minehead_Sentry_2, bool K2Node_DynamicCast_bSuccess_6, class ABP_SpotLightInteractive_C* K2Node_DynamicCast_AsBP_Spot_Light_Interactive, bool K2Node_DynamicCast_bSuccess_7, class ABP_SpotLightInteractive_C* K2Node_DynamicCast_AsBP_Spot_Light_Interactive_1, bool K2Node_DynamicCast_bSuccess_8, class APlayerCharacter* K2Node_ComponentBoundEvent_user_1, class APlayerCharacter* K2Node_ComponentBoundEvent_user, bool CallFunc_IsValid_ReturnValue_7, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_1, class AActor* K2Node_ComponentBoundEvent_OtherActor_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_1, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_1, bool K2Node_ComponentBoundEvent_bFromSweep, const FHitResult K2Node_ComponentBoundEvent_SweepResult, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool CallFunc_TryPopActiveStatusEffect_ReturnValue, bool CallFunc_TryPushActiveStatusEffect_ReturnValue, FRotator CallFunc_K2_GetActorRotation_ReturnValue, FTransform CallFunc_MakeTransform_ReturnValue_1, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AFSDGameState* CallFunc_GetFSDGameState_ReturnValue_1, class ABP_Minehead_LandingZone_C* CallFunc_FinishSpawningActor_ReturnValue, bool K2Node_ComponentBoundEvent_canUse, FExecuteUbergraph_BP_MineHeadK2Node_CreateDelegate_OutputDelegate K2Node_CreateDelegate_OutputDelegate, FVector CallFunc_K2_GetComponentLocation_ReturnValue_1, class UAudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue_3, FRotator CallFunc_K2_GetActorRotation_ReturnValue_1);
    void MinheadStateChanged__DelegateSignature(TEnumAsByte<Minehead_State::Type> State);
};

#endif
