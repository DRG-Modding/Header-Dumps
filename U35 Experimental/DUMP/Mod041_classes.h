// BlueprintGeneratedClass Mod041.Mod041_C
// Size: 0x608 (Inherited: 0x2b0)
struct AMod041_C : AModBaseV2_C {
	UPROPERTY(BlueprintReadWrite) FPointerToUberGraphFrame UberGraphFrame; 
	UPROPERTY(BlueprintReadWrite) FName Custom Mats Path; 
	UPROPERTY(BlueprintReadWrite) TMap<FName, bool> Material Paths; 
	UPROPERTY(BlueprintReadWrite) TArray<FString> Ignore Mats Partial Match; 
	UPROPERTY(BlueprintReadWrite) U041_SaveData_C* Save Data; 
	UPROPERTY(BlueprintReadWrite) FString Save File Path; 
	UPROPERTY(BlueprintReadWrite) APlayerController* Local Controller; 
	UPROPERTY(BlueprintReadWrite) U041_ManagerUI_C* UI; 
	UPROPERTY(BlueprintReadWrite) TMap<FString, UMaterialInstanceDynamic*> Materials With IDs; 
	UPROPERTY(BlueprintReadWrite) TMap<FString, UStaticMesh*> Cached Meshes; 
	UPROPERTY(BlueprintReadWrite) ABP_XharCustomizationConsole_C* Wardrobe; 
	UPROPERTY(BlueprintReadWrite) ABP_Donkey_C* Garage Molly; 
	UPROPERTY(BlueprintReadWrite) ACameraActor* Garage Cam; 
	UPROPERTY(BlueprintReadWrite) AActor* Active Mat Ball; 
	UPROPERTY(BlueprintReadWrite) FName Mat Ball tag; 
	UPROPERTY(BlueprintReadWrite) U041_MatSelectionUI_C* Mat Selection UI; 
	UPROPERTY(BlueprintReadWrite) TArray<AActor*> Mat Preview Balls; 
	UPROPERTY(BlueprintReadWrite) TArray<FString> Ignore Mats Exact Match; 
	UPROPERTY(BlueprintReadWrite) TArray<FString> Material Name Prefixes; 
	UPROPERTY(BlueprintReadWrite) TArray<FString> Extended Mat Set IDs; 
	UPROPERTY(BlueprintReadWrite) FString Default Body Mat ID; 
	UPROPERTY(BlueprintReadWrite) FString Default Leg Mat ID; 
	UPROPERTY(BlueprintReadWrite) FString Default Chute Mat ID; 
	UPROPERTY(BlueprintReadWrite) TArray<AActor*> Selected Mat UIs; 
	UPROPERTY(BlueprintReadWrite) bool Garage Is Open; 
	UPROPERTY(BlueprintReadWrite) bool Main Body Layer; 
	UPROPERTY(BlueprintReadWrite) bool Top Layer; 
	UPROPERTY(BlueprintReadWrite) bool Misc Layer; 
	UPROPERTY(BlueprintReadWrite) FString Default Lights Mat ID; 
	UPROPERTY(BlueprintReadWrite) int32_t Body Mat Index; 
	UPROPERTY(BlueprintReadWrite) int32_t Leg Mat Index; 
	UPROPERTY(BlueprintReadWrite) int32_t Chute Mat Index; 
	UPROPERTY(BlueprintReadWrite) int32_t Lights Mat Index; 
	UPROPERTY(BlueprintReadWrite) A041_ConsumeUseInput_C* Use Key Consumer; 
	UPROPERTY(BlueprintReadWrite) FTimerHandle Paint Loop; 
	UPROPERTY(BlueprintReadWrite) FTransform 0; 
	UPROPERTY(BlueprintReadWrite) bool Lights Layer; 
	UPROPERTY(BlueprintReadWrite) A041_ConsumeEscapeKey_C* Esc Consume; 
	UPROPERTY(BlueprintReadWrite) FTransform Original Player Cam Tranform; 
	UPROPERTY(BlueprintReadWrite) FName Painted Tag; 
	UPROPERTY(BlueprintReadWrite) bool Mat Loaded; 
	UPROPERTY(BlueprintReadWrite) TArray<FAssetData> Assets; 
	UPROPERTY(BlueprintReadWrite) int32_t Current Asset Index; 
	UPROPERTY(BlueprintReadWrite) TSet<FAssetData> Assets Set; 
	UPROPERTY(BlueprintReadWrite) TMap<FString, FString> Mat IDs With Names; 

	UFUNCTION(BlueprintCallable) void Set Saved Light Mat(FString mat);
	UFUNCTION(BlueprintCallable) void Set Saved Chute Mat(FString mat);
	UFUNCTION(BlueprintCallable) void Set Saved Leg Mat(FString mat);
	UFUNCTION(BlueprintCallable) void Set Saved Body Mat(FString mat);
	UFUNCTION(BlueprintCallable) void Get Saved Lights Mat(FString mat);
	UFUNCTION(BlueprintCallable) void Get Saved Chutes Mat(FString mat);
	UFUNCTION(BlueprintCallable) void Get Saved Legs Mat(FString mat);
	UFUNCTION(BlueprintCallable) void Get Saved Body Mat(FString mat);
	UFUNCTION(BlueprintCallable) void Apply Paint To Mollys In Mission(bool Only Unpainted);
	UFUNCTION(BlueprintCallable) void Set Button Mesh Layers(FString Body Mat Name, FString Leg Mat Name, FString Chute Mat Name, ABP_Donkey_C* Molly);
	UFUNCTION(BlueprintCallable) void Enforce Player Cam Garage Position();
	UFUNCTION(BlueprintCallable) void Randomise Layers for Mission If Needed();
	UFUNCTION(BlueprintCallable) bool Enabled Use Input Hijack();
	UFUNCTION(BlueprintCallable) bool Player Can Open Wardrobe();
	UFUNCTION(BlueprintCallable) void Toggle Mission Preview HUD(bool Visible);
	UFUNCTION(BlueprintCallable) void Spawn Wardrobe();
	UFUNCTION(BlueprintCallable) void Force Set All Layers(FString Body Mat ID, FString Leg Mat ID, FString Chute Mat ID, FString Light Mat ID, ABP_Donkey_C* Molly);
	UFUNCTION(BlueprintCallable) void Randomise And Save Active Layers(ABP_Donkey_C* Molly);
	UFUNCTION(BlueprintCallable) void Get Random Mat Name(FString Name);
	UFUNCTION(BlueprintCallable) void Is Ignored Mat(FString Mat Name, bool Ignore);
	UFUNCTION(BlueprintCallable) void Set And Save Active Layers(FString Mat Name, ABP_Donkey_C* Molly);
	UFUNCTION(BlueprintCallable) void Reset And Save Active Layers(ABP_Donkey_C* Molly);
	UFUNCTION(BlueprintCallable) void Toggle Sky Light(bool New Enabled State);
	UFUNCTION(BlueprintCallable) void Get Garage Floor Positions(int32_t Tiles Wide, int32_t Tiles Deep, float Tile Size, TArray<FVector> Positions);
	UFUNCTION(BlueprintCallable) void Get Asset Mesh(FName Asset Path, FName Asset Name, UStaticMesh* Mesh);
	UFUNCTION(BlueprintCallable) void Spawn Static Mesh(FName Mesh Path, FName Mesh Name, FVector Location, FRotator Rotation, FVector Scale, AActor* Static Mesh Actor);
	UFUNCTION(BlueprintCallable) void Set Current Mat Preview Page(int32_t New Page);
	UFUNCTION(BlueprintCallable) void Exit Garage();
	UFUNCTION(BlueprintCallable) void Open Garage();
	UFUNCTION(BlueprintCallable) void Construct Garage();
	UFUNCTION(BlueprintCallable) void Add Default Mats();
	UFUNCTION(BlueprintCallable) void Initialise Materials();
	UFUNCTION(BlueprintCallable) void Get Material ID(FName Material Asset Path, FString ID);
	UFUNCTION(BlueprintCallable) void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_2(FKey Key);
	UFUNCTION(BlueprintCallable) void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1(FKey Key);
	UFUNCTION(BlueprintCallable) void Enforce UI Mode();
	UFUNCTION(BlueprintCallable) void Start();
	UFUNCTION(BlueprintCallable) void Stop();
	UFUNCTION(BlueprintCallable) void Set New Molly Mats();
	UFUNCTION(BlueprintCallable) void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	UFUNCTION(BlueprintCallable) void ReceiveDestroyed();
	UFUNCTION(BlueprintCallable) void Save();
	UFUNCTION(BlueprintCallable) void Handle Use Key();
	UFUNCTION(BlueprintCallable) void Setup Esc Hijack();
	UFUNCTION(BlueprintCallable) void Handle Close Menu Key Press();
	UFUNCTION(BlueprintCallable) void Manage Mission Preview UI();
	UFUNCTION(BlueprintCallable) void ReceiveTick(float DeltaSeconds);
	UFUNCTION(BlueprintCallable) void Init(APlayerController* LocalPlayer);
	UFUNCTION(BlueprintCallable) void ReceiveBeginPlay();
	UFUNCTION(BlueprintCallable) void ExecuteUbergraph_Mod041(int32_t EntryPoint);
};

