#ifndef UE4SS_SDK_Menu_Cheats_SpaceRig_HPP
#define UE4SS_SDK_Menu_Cheats_SpaceRig_HPP

class UMenu_Cheats_SpaceRig_C : public UWindowWidget
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UScrollBox* BoscoUpgradePanel;
    class UButton* Button_Close;
    class UButton* Button_Driller;
    class UButton* Button_Engineer;
    class UButton* Button_General;
    class UButton* Button_GenericHero;
    class UButton* Button_Gunner;
    class UButton* Button_Info;
    class UButton* Button_ReloadChar;
    class UButton* Button_Scout;
    class UButton* Button_Vanity;
    class UCheat_ConsoleCmd_C* Cheat_ConsoleCmd;
    class UCheat_ConsoleCmd_C* Cheat_ConsoleCmd_C_0;
    class UCheat_ConvertSave_C* Cheat_ConvertSave;
    class UCheat_MiscUpgradesItem_C* Cheat_FifthItem;
    class UCheat_MiscUpgradesItem_C* Cheat_FirstItem;
    class UCheat_MiscUpgradesItem_C* Cheat_FourthItem;
    class UCheat_LevelScale_C* Cheat_LevelScale;
    class UCheat_MakeMainSave_C* Cheat_MakeMainSave;
    class UCheat_MaterialInfo_C* Cheat_MaterialInfo_C_2;
    class UCheat_MaterialInfo_C* Cheat_MaterialInfo_C_3;
    class UCheat_MaterialInfo_C* Cheat_MaterialInfo_C_4;
    class UButton* Cheat_ResetAchievement;
    class UCheat_RoomList_C* Cheat_RoomList;
    class UCheat_MiscUpgradesItem_C* Cheat_SecondItem;
    class UCheat_SetPromotionRank_C* Cheat_SetPromotionRank;
    class UCheat_MiscUpgradesItem_C* Cheat_SixthItem;
    class UCheat_MiscUpgradesItem_C* Cheat_ThirdItem;
    class UCheat_VanityTab_C* Cheat_VanityTab;
    class UWidgetSwitcher* ContentSwitcher;
    class UTextBlock* CritterPoolList;
    class UTextBlock* EnemyPool;
    class UComboBoxString* mainWeaponselector;
    class UButton* RespawnboscoBTN;
    class UScrollBox* SB_ColorSkinMain;
    class UScrollBox* SB_ColorSkinSecondary;
    class UScrollBox* SB_MeshSkinMain;
    class UScrollBox* SB_MeshSkinSecondary;
    class UScrollBox* SB_SecWepPerks;
    class UScrollBox* SB_WeaponPerkList;
    class UComboBoxString* SecondaryWeaponSelector;
    class UTextBlock* StationaryPool;
    class UCanvasPanel* TopCanvasPanel;
    class UVerticalBox* VerticalBox_Materials;
    class UButton* ActiveTab;
    class UButton* ActiveCharacterTab;
    int32 Current Tab Index;
    int32 Amount of main tabs;
    bool Fast Select Enabled;
    bool Power User Mode Active;
    class UCheat_SpawnEnemyAdvanced_C* advancedSpawnMenu;

    class UWidget* On_AdvEnemySpawn_GetMenuContent();
    class UUpgradableBoscoComponent* GetBoscoUpgradeComponent(class ABosco*& Drone);
    void InitiateAnselSpinBox();
    class UWidget* OnGetMenuContent_0();
    ESlateVisibility Get_ActivateCommonCheatsButton_Visibility_0();
    float Get_HealthSlider_Value_0();
    FEventReply OnKeyDown(FGeometry MyGeometry, FKeyEvent InKeyEvent);
    void Get Character to change(FText Character, class UPlayerCharacterID*& character out);
    void DeselectTab(class UButton* Tab);
    void SelectTab(int32 Index, class UButton* TabButton);
    void BndEvt__Button_Close_K2Node_ComponentBoundEvent_62_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_General_K2Node_ComponentBoundEvent_323_OnButtonClickedEvent__DelegateSignature();
    void SelectFirstTab();
    void Init Tabs();
    void BndEvt__Button_Controls_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
    void OnShown();
    void OnClosed();
    void BndEvt__Button_Gunner_K2Node_ComponentBoundEvent_683_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Engineer_K2Node_ComponentBoundEvent_735_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Driller_K2Node_ComponentBoundEvent_758_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Scout_K2Node_ComponentBoundEvent_782_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_0_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature();
    void Update weapon info(EItemCategory categoryType, class UComboBoxString* ComboBoxToFill);
    void Set new weapon(FString Weapon name, EItemCategory Category);
    void Construct();
    void update selected upgrade();
    void Reload lists();
    void Fill Perk list(EItemCategory ItemSlotType, class UScrollBox* scrollbox to change);
    void BndEvt__mainWeaponselector_K2Node_ComponentBoundEvent_1369_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, TEnumAsByte<ESelectInfo::Type> SelectionType);
    void BndEvt__SecondaryWeaponSelector_K2Node_ComponentBoundEvent_1395_OnSelectionChangedEvent__DelegateSignature(FString SelectedItem, TEnumAsByte<ESelectInfo::Type> SelectionType);
    void Swap Weapon to next(EItemCategory Item Category);
    void HotKey Interaction change character();
    void Select Next Tab();
    void Select previous tab();
    void Select current tab();
    void BndEvt__CheckBox_QuickSelect_K2Node_ComponentBoundEvent_777_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
    void BndEvt__Button_GenericHero_K2Node_ComponentBoundEvent_164_OnButtonClickedEvent__DelegateSignature();
    void Fill Misc Upgrades(EItemCategory Item Slot type, class UCheat_MiscUpgradesItem_C* CheatBoxToFill);
    void Set player misc upgrades();
    void Reload Character();
    void Build Bosco abilities();
    void BndEvt__RespawnboscoBTN_K2Node_ComponentBoundEvent_172_OnButtonClickedEvent__DelegateSignature();
    void Initiate Pool lists();
    void BndEvt__Button_Vanity_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Cheat_ResetAchievement_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__HealthSlider_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);
    void BndEvt__FastPowerAttack_K2Node_ComponentBoundEvent_5_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
    void BndEvt__AnselSpeedSpinBox_K2Node_ComponentBoundEvent_3_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
    void BndEvt__AnselDistanceSpinBox_K2Node_ComponentBoundEvent_4_OnSpinBoxValueChangedEvent__DelegateSignature(float InValue);
    void Fill Weapon skin SB(class UScrollBox* SkinScrollBox, EItemCategory Item Slot, EItemSkinType SkinType);
    void Reload skin list(EItemCategory Category);
    void BndEvt__AdvEnemySpawn_K2Node_ComponentBoundEvent_9_OnMenuOpenChangedEvent__DelegateSignature(bool bIsOpen);
    void BndEvt__PlaceSpawnpos_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__CleanSpawnPos_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature();
    void ExecuteUbergraph_Menu_Cheats_SpaceRig(int32 EntryPoint);
};

#endif
